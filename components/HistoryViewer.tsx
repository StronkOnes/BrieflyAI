
import React, { useState, useMemo } from 'react';
import { HistoryItem, TabKey } from '../types';
import { TABS } from '../constants';

const HistoryModal: React.FC<{ item: HistoryItem; onClose: () => void }> = ({ item, onClose }) => {
    return (
        <div className="fixed inset-0 bg-black bg-opacity-70 z-50 flex justify-center items-center" onClick={onClose}>
            <div className="bg-slate-800 rounded-lg shadow-2xl w-full max-w-4xl max-h-[90vh] flex flex-col" onClick={e => e.stopPropagation()}>
                <header className="p-4 border-b border-slate-700 flex justify-between items-center">
                    <div>
                        <h3 className="text-xl font-bold text-white">{item.topic}</h3>
                        <p className="text-sm text-slate-400">
                            Generated on {item.timestamp.toLocaleDateString()} at {item.timestamp.toLocaleTimeString()}
                        </p>
                    </div>
                    <button onClick={onClose} className="p-2 rounded-full hover:bg-slate-700">&times;</button>
                </header>
                <div className="p-6 overflow-y-auto">
                    <pre className="whitespace-pre-wrap font-sans text-slate-300 leading-relaxed">{item.content}</pre>
                </div>
                <footer className="p-4 border-t border-slate-700">
                    <button
                        onClick={onClose}
                        className="bg-violet-600 text-white font-bold py-2 px-4 rounded-md hover:bg-violet-700"
                    >
                        Close
                    </button>
                </footer>
            </div>
        </div>
    );
};

const HistoryViewer: React.FC<{ history: HistoryItem[] }> = ({ history }) => {
    const [filter, setFilter] = useState('');
    const [selectedItem, setSelectedItem] = useState<HistoryItem | null>(null);

    const filteredHistory = useMemo(() => {
        if (!filter) return history;
        return history.filter(item =>
            item.topic.toLowerCase().includes(filter.toLowerCase()) ||
            item.content.toLowerCase().includes(filter.toLowerCase())
        );
    }, [history, filter]);

    const getTabInfo = (type: TabKey) => TABS.find(t => t.key === type);

    return (
        <div className="p-8 space-y-6 h-full flex flex-col">
            {selectedItem && <HistoryModal item={selectedItem} onClose={() => setSelectedItem(null)} />}
            <header>
                <h1 className="text-3xl font-bold text-white">Content History</h1>
                <p className="text-slate-400 mt-1">Review, search, and manage all content generated by the AI Studio.</p>
            </header>

            <div className="flex-shrink-0">
                <input
                    type="text"
                    value={filter}
                    onChange={(e) => setFilter(e.target.value)}
                    placeholder="Search through history..."
                    className="w-full bg-slate-800 text-white placeholder-slate-400 rounded-md px-4 py-3 border border-slate-700 focus:outline-none focus:ring-2 focus:ring-violet-500 transition"
                />
            </div>

            <div className="flex-grow bg-slate-800/50 p-6 rounded-lg shadow-md overflow-y-auto">
                {filteredHistory.length > 0 ? (
                    <ul className="space-y-4">
                        {filteredHistory.map(item => {
                            const tabInfo = getTabInfo(item.type);
                            return (
                                <li key={item.id} className="bg-slate-800 p-4 rounded-lg shadow-md hover:bg-slate-700/60 transition-colors duration-200 cursor-pointer" onClick={() => setSelectedItem(item)}>
                                    <div className="flex justify-between items-start">
                                        <div>
                                            <div className="flex items-center gap-3 mb-2">
                                                <span className="text-violet-400">{tabInfo?.icon}</span>
                                                <h3 className="font-semibold text-lg text-white">{item.topic}</h3>
                                            </div>
                                            <p className="text-slate-400 text-sm truncate">{item.content.substring(0, 150)}...</p>
                                        </div>
                                        <div className="text-right text-xs text-slate-500 flex-shrink-0 ml-4">
                                            <p>{item.timestamp.toLocaleDateString()}</p>
                                            <p>{item.timestamp.toLocaleTimeString()}</p>
                                        </div>
                                    </div>
                                </li>
                            );
                        })}
                    </ul>
                ) : (
                    <div className="text-center text-slate-400 py-16">
                        <p className="text-lg">No history found.</p>
                        <p className="text-sm">Generate some content in other modules to see it here.</p>
                    </div>
                )}
            </div>
        </div>
    );
};

export default HistoryViewer;
